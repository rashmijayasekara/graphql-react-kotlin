type Query{
    helloworld: String
    helloworld2: String
    greet(name: String!): String!
    getRandomNumbers: [Int!]!
    ##    This Int! will never return a null, it will either
    #    return an empty array instead of a null
    getEvent: Event!
    getPosts: [Post!]!
    recentPosts(page: Int!, size: Int!):[Post!]!
    getUsers(page: Int!, size: Int!):[User!]!
    getComments(page: Int!, size: Int): [Comment!]!
    test(date: Date, bornAt: DateTime): String!
}
#
#It is going to check if there are any mutation \
#resolvers of the same name and they are going
#to map,
# That's why we are creating all the resolvers with the same name of the query


type Mutation{
    addUserInput(addUserInput: AddUserInput!):ID!
    addPost(addPostInput: AddPostInput!):Post!
    addComment(addCommentInput: AddCommentInput!):Comment!
}

input AddCommentInput{
    text: String!
    authorId: ID!
    postId: ID!
}

input AddPostInput{
    title: String!
    description: String
    authorId: ID!
}

input AddUserInput{
    name: String!
}

type Event{
    id:ID
    eventType: String!
}
type Post{
    id:ID!
    title: String!
    description: String
    author: User
    comments:[Comment!]!
}

type User{
    id: ID!
    name: String!
    posts: [Post!]!
    totalPost: Int!
    comments: [Comment!]!
}

type Comment{
    id: ID!
    text: String!
    author: User!
    post: Post!
}




